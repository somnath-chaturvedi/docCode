import org.docx4j.openpackaging.packages.WordprocessingMLPackage;
import org.docx4j.openpackaging.parts.WordprocessingML.MainDocumentPart;
import org.docx4j.wml.ObjectFactory;
import org.docx4j.wml.P;
import java.io.File;
import java.util.Arrays;

public class MergeDocxWithFullFormatting {
    public static void main(String[] args) throws Exception {
        String rootFolderPath = "C:/your/docx/folder";  // Change to your folder path
        String outputFilePath = "C:/your/output/merged.docx";

        WordprocessingMLPackage mergedDoc = WordprocessingMLPackage.createPackage();
        MainDocumentPart mainPart = mergedDoc.getMainDocumentPart();
        ObjectFactory factory = new ObjectFactory();

        File rootFolder = new File(rootFolderPath);
        if (!rootFolder.exists() || !rootFolder.isDirectory()) {
            System.out.println("Invalid folder path.");
            return;
        }

        File[] subfolders = rootFolder.listFiles(File::isDirectory);
        if (subfolders != null) {
            Arrays.sort(subfolders);  // Ensure correct order
            
            for (File folder : subfolders) {
                File[] docxFiles = folder.listFiles((dir, name) -> name.toLowerCase().endsWith(".docx"));
                if (docxFiles != null && docxFiles.length > 0) {
                    // Add folder name as heading
                    P heading = factory.createP();
                    heading.getContent().add(mainPart.createStyledParagraphOfText("Heading1", folder.getName()));
                    mainPart.addObject(heading);

                    for (File docxFile : docxFiles) {
                        System.out.println("Merging: " + docxFile.getName());

                        // Load document
                        WordprocessingMLPackage tempDoc = WordprocessingMLPackage.load(docxFile);

                        // Merge full document (including styles, headers, footers, images)
                        mergedDoc.getMainDocumentPart().getContent().addAll(tempDoc.getMainDocumentPart().getContent());
                        mergedDoc.getContentTypeManager().mergeContentTypes(tempDoc.getContentTypeManager());
                        mergedDoc.getParts().putAll(tempDoc.getParts());

                        // Add a section break to maintain formatting
                        addSectionBreak(mainPart, factory);
                    }
                }
            }
        }

        mergedDoc.save(new File(outputFilePath));
        System.out.println("Merged document saved at: " + outputFilePath);
    }

    // Adds a section break to maintain separate headers, footers, margins
    private static void addSectionBreak(MainDocumentPart mainPart, ObjectFactory factory) {
        P sectionBreak = factory.createP();
        mainPart.addObject(sectionBreak);
    }
}
