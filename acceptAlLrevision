import org.docx4j.openpackaging.packages.WordprocessingMLPackage;
import org.docx4j.openpackaging.parts.WordprocessingML.MainDocumentPart;
import org.docx4j.traversal.TraversalUtil;
import org.docx4j.wml.*;

import java.io.File;
import java.util.List;

public class AcceptAllRevisions {

    public static void main(String[] args) throws Exception {
        WordprocessingMLPackage wordMLPackage = WordprocessingMLPackage.load(new File("input.docx"));
        MainDocumentPart mainDocumentPart = wordMLPackage.getMainDocumentPart();

        new TraversalUtil(mainDocumentPart, new TraversalUtil.Callback() {
            @Override
            public List<Object> apply(Object o) {
                if (o instanceof JAXBElement) {
                    o = ((JAXBElement<?>) o).getValue();
                }

                if (o instanceof CTMarkupRange || o instanceof CTBookmark) {
                    // Ignore bookmarks and ranges
                    return null;
                }

                if (o instanceof CTTrackChange) {
                    // General track changes marker
                    return null;
                }

                if (o instanceof org.docx4j.wml.CTIns) {
                    // Accept insertion → keep content, remove wrapper
                    return ((org.docx4j.wml.CTIns) o).getCustomXmlOrSmartTagOrSdt();
                }

                if (o instanceof org.docx4j.wml.CTDel) {
                    // Accept deletion → remove content
                    return TraversalUtil.DELETE;
                }

                if (o instanceof org.docx4j.wml.CTMoveFrom) {
                    // Accept move-from → remove
                    return TraversalUtil.DELETE;
                }

                if (o instanceof org.docx4j.wml.CTMoveTo) {
                    // Accept move-to → keep content, remove wrapper
                    return ((org.docx4j.wml.CTMoveTo) o).getCustomXmlOrSmartTagOrSdt();
                }

                return null;
            }

            @Override
            public boolean shouldTraverse(Object o) {
                return true;
            }

            @Override
            public void walkJAXBElements(Object parent) {
                List<Object> children = TraversalUtil.getChildren(parent);
                if (children != null) {
                    for (Object o : children) {
                        this.apply(o);
                        this.walkJAXBElements(o);
                    }
                }
            }
        });

        wordMLPackage.save(new File("output.docx"));
        System.out.println("All revisions accepted and saved to output.docx");
    }
}
